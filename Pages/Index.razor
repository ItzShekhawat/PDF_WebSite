@page "/"
@inject NavigationManager Navigation

<AuthorizeView>
    <Authorized>
        Hello, @context.User.Identity.Name !
        Your role is : @context.User.IsInRole("Admin")!
        <!-- Usare per un controllo su Role del user-->
        @if (context.User.IsInRole("Admin") || context.User.IsInRole("User")) { }
  

    </Authorized>
    <NotAuthorized>
        <MudPaper Elevation="0" Class="pa-4" Style="height:400px; width:500px; background-color:cadetblue">
            <div class="d-none d-lg-block mud-theme-tertiary rounded" style="height:100%; width:100%;">
                <h1>Utente non loggato, proceda al LogIn </h1>
                <a href="/">Log in</a>
            </div>
        </MudPaper>
    </NotAuthorized>
</AuthorizeView>

@code
{
    // Questo ci permette di accedere al user.claims authenticato or non-Autenticato 
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateTask;

        if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
        {
            Navigation.NavigateTo("/", true);

        }else if (authenticationState?.User?.IsInRole("Admin") == true || authenticationState?.User?.IsInRole("User") == true)
        {
            // Se ha l'accesso ed è di ruolo puù subito procedere alla pagina successiva
            Navigation.NavigateTo("/clients/", true);
        }
        else
        {
            Navigation.NavigateTo("/", true);
        }
    }
}

